<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="elc::defs::base::constexpr_str_n::constexpr_str_t&lt;char32_t&gt;">
		<DisplayString>{_begin,s32}</DisplayString>
		<StringView>_begin,s32</StringView>
	</Type>
	<Type Name="elc::defs::base::constexpr_str_n::constexpr_str_t&lt;char&gt;">
		<DisplayString>{_begin,s}</DisplayString>
		<StringView>_begin,s</StringView>
	</Type>
	<Type Name="elc::defs::memory::ptr_n::base_ptr_t&lt;*&gt;">
		<DisplayString>ptr {*_to}</DisplayString>
		<Expand>
			<ExpandedItem>_to</ExpandedItem>
		</Expand>
	</Type>
	<Type Name="elc::defs::string_n::string_t&lt;*&gt;">
		<DisplayString Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == true">constexpr str {*_cso_info._str}</DisplayString>
		<DisplayString Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == false">char {_cso_info._ch}</DisplayString>
		<DisplayString Condition="_cso_flags._cso_flag == false">?"{*_cso_info._mptr._to,view(ElcString)}"</DisplayString>
		<Expand>
			<Item Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == true" Name="constexpr str">*_cso_info._str</Item>
			<Item Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == false" Name="char">_cso_info._ch</Item>
			<Item Condition="_cso_flags._cso_flag == false" Name="data ptr">_cso_info._mptr</Item>
		</Expand>
	</Type>
	<Type Name="elc::defs::string_n::string_t&lt;char&gt;">
		<DisplayString Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == true">constexpr str {*_cso_info._str}</DisplayString>
		<DisplayString Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == false">char {_cso_info._ch}</DisplayString>
		<DisplayString Condition="_cso_flags._cso_flag == false">"{*_cso_info._mptr._to,view(ElcString)}"</DisplayString>
		<Expand>
			<Item Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == true" Name="constexpr str">*_cso_info._str</Item>
			<Item Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == false" Name="char">_cso_info._ch</Item>
			<Item Condition="_cso_flags._cso_flag == false" Name="data ptr">_cso_info._mptr</Item>
		</Expand>
	</Type>
	<Type Name="elc::defs::string_n::string_t&lt;char32_t&gt;">
		<DisplayString Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == true">constexpr str {*_cso_info._str}</DisplayString>
		<DisplayString Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == false">char {_cso_info._ch}</DisplayString>
		<DisplayString Condition="_cso_flags._cso_flag == false">U"{*_cso_info._mptr._to,view(ElcString)}"</DisplayString>
		<Expand>
			<Item Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == true" Name="constexpr str">*_cso_info._str</Item>
			<Item Condition="_cso_flags._cso_flag == true &amp;&amp; _cso_flags._str_cso_flag == false" Name="char">_cso_info._ch</Item>
			<Item Condition="_cso_flags._cso_flag == false" Name="data ptr">_cso_info._mptr</Item>
		</Expand>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::comn_string_data_t&lt;char32_t&gt;">
		<DisplayString IncludeView="ElcString">{_m._m,s32b}</DisplayString>
		<StringView>_m._m,s32</StringView>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::comn_string_data_t&lt;char&gt;">
		<DisplayString IncludeView="ElcString">{_m._m,sb}</DisplayString>
		<StringView>_m._m,s</StringView>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::constexpr_string_data_t&lt;char32_t&gt;">
		<DisplayString IncludeView="ElcString">{_m,s32b}</DisplayString>
		<StringView>_m,s32</StringView>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::constexpr_string_data_t&lt;char&gt;">
		<DisplayString IncludeView="ElcString">{_m,sb}</DisplayString>
		<StringView>_m,s</StringView>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::null_string_data_t&lt;*&gt;">
		<DisplayString IncludeView="ElcString"></DisplayString>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::substr_string_data_t&lt;*&gt;">
		<DisplayString IncludeView="ElcString">"+This part of string is so complex that its content cannot be displayed+"</DisplayString>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::head_apply_string_data_t&lt;*&gt;">
		<DisplayString IncludeView="ElcString">"+This part of string is so complex that its content cannot be displayed+"</DisplayString>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::end_apply_string_data_t&lt;char32_t&gt;">
		<DisplayString IncludeView="ElcString">{*_to._to,view(ElcString)}{_m._m,s32b}</DisplayString>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::end_apply_string_data_t&lt;char&gt;">
		<DisplayString IncludeView="ElcString">{*_to._to,view(ElcString)}{_m._m,sb}</DisplayString>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::sum_string_data_t&lt;*&gt;">
		<DisplayString IncludeView="ElcString">{*_before._m,view(ElcString)}{*_after._m,view(ElcString)}</DisplayString>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::erased_string_data_t&lt;*&gt;">
		<DisplayString IncludeView="ElcString">"+This part of string is so complex that its content cannot be displayed+"</DisplayString>
	</Type>
	<Type Name="elc::defs::string_n::string_data_n::inserted_string_data_t&lt;*&gt;">
		<DisplayString IncludeView="ElcString">"+This part of string is so complex that its content cannot be displayed+"</DisplayString>
	</Type>
</AutoVisualizer>
